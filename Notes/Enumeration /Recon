dirsearch -u http://<domainame>

python3 -c 'import pty;pty.spawn("/bin/bash")'   --> interactive terminal

python -m SimpleHTTPServer 80 --bind 192.168.1.2
Bind the server to a specific IP address.

PASSIVE INFO GATHERING:
C:\> whois.exe facebook.com
whois www.example.com
------------------------------------------------DNS---------------------------------------------------------------------------------------------

Resource Record:	A domain name, usually a fully qualified domain name, is the first part of a Resource Record. If you don't use a fully qualified domain name, the zone's name where the record is located will be appended to the end of the name.
TTL:	In seconds, the Time-To-Live (TTL) defaults to the minimum value specified in the SOA record.
Record Class:	Internet, Hesiod, or Chaos
Start Of Authority (SOA):	It should be first in a zone file because it indicates the start of a zone. Each zone can only have one SOA record, and additionally, it contains the zone's values, such as a serial number and multiple expiration timeouts.
Name Servers (NS):	The distributed database is bound together by NS Records. They are in charge of a zone's authoritative name server and the authority for a child zone to a name server.
IPv4 Addresses (A):	The A record is only a mapping between a hostname and an IP address. 'Forward' zones are those with A records.
Pointer (PTR):	The PTR record is a mapping between an IP address and a hostname. 'Reverse' zones are those that have PTR records.
Canonical Name (CNAME):	An alias hostname is mapped to an A record hostname using the CNAME record.
Mail Exchange (MX):	The MX record identifies a host that will accept emails for a specific host. A priority value has been assigned to the specified host. Multiple MX records can exist on the same host, and a prioritized list is made consisting of the records for a specific host.

A Records
nslookup example.com
dig facebook.com @1.1.1.1 (Server from previous query)

A Records for a Subdomain
nslookup -query=A example.com
dig a www.example.com @1.1.1.1

PTR Records for an IP Address
nslookup -query=PTR 31.13.92.36(facebook address)
dig -x 31.13.92.36 @1.1.1.1

ANY Existing Records
 nslookup -query=ANY example.com
 dig any google.com @8.8.8.8
 dig any cloudflare.com @8.8.8.8

TXT Records
 nslookup -query=TXT example.com
 dig txt facebook.com @1.1.1.1

MX Records
 nslookup -query=MX example.com
 dig mx facebook.com @1.1.1.1

 1. Identifying Nameservers
 nslookup -type=NS zonetransfer.me
 2.Perform the Zone transfer using -type=any and -query=AXFR parameters
 nslookup -type=any -query=AXFR zonetransfer.me nsztm1.digi.ninja

----------------------Passive Subdomain Enumeration--------------------
Baidu =	Baidu search engine.
Bufferoverun =	Uses data from Rapid7's Project Sonar - www.rapid7.com/research/project-sonar/
Crtsh =	Comodo Certificate search.
Hackertarget =	Online vulnerability scanners and network intelligence to help organizations.
Otx =	AlienVault Open Threat Exchange - https://otx.alienvault.com
Rapiddns =	DNS query tool, which makes querying subdomains or sites using the same IP easy.
Sublist3r =	Fast subdomains enumeration tool for penetration testers
Threatcrowd =	Open source threat intelligence.
Threatminer =	Data mining for threat intelligence.
Trello =	Search Trello boards (Uses Google search)
Urlscan =	A sandbox for the web that is a URL and website scanner.
Vhost =	Bing virtual hosts search.
Virustotal =	Domain search.
Zoomeye	= A Chinese version of Shodan.

Certificates:
    https://censys.io
    https://crt.sh
Certificate Transparency:
curl -s https://crt.sh/\?q\=inlanefreight.com\&output\=json | jq .   
Here we will get subdomain list with user-frendly overview:
curl -s https://crt.sh/\?q\=inlanefreight.com\&output\=json | jq . | grep name | cut -d":" -f2 | grep -v "CN=" | cut -d'"' -f2 | awk '{gsub(/\\n/,"\n");}1;' | sort -u
Company Hosted Servers:
for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f1,4;done

https://www.shodan.io/
for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f4 >> ip-addresses.txt;done
for i in $(cat ip-addresses.txt);do shodan host $i;done
dig any inlanefreight.com

Company Hosted Servers:
for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f1,4;done
Google Dorks inurl: and intext: amazonaws.com OR blob.core.windows.net

Company infrastructure:
https://domain.glass/
https://buckets.grayhatwarfare.com/  = public storages/buckets


https://www.virustotal.com/gui/home/url

 Certificate Transparency:
 export TARGET="facebook.com"
 curl -s "https://crt.sh/?q=${TARGET}&output=json" | jq -r '.[] | "\(.name_value)\n\(.common_name)"' | sort -u > "${TARGET}_crt.sh.txt"
 description: jq -r '.[]' "\(.name_value)\n\(.common_name)"' 	Process the json output and print certificate's name value and common name one per line.
 head -n20 facebook.com_crt.sh.txt

 export TARGET="facebook.com"
 export PORT="443"
 openssl s_client -ign_eof 2>/dev/null <<<$'HEAD / HTTP/1.0\r\n\r' -connect "${TARGET}:${PORT}" | openssl x509 -noout -text -in - | grep 'DNS' | sed -e 's|DNS:|\n|g' -e 's|^\*.*||g' | tr -d ',' | sort -u

 **Automating Passive Subdomain Enumeration**
1. cat sources.txt
baidu
bufferoverun
crtsh
hackertarget
otx
projectdiscovery
rapiddns
sublist3r
threatcrowd
trello
urlscan
vhost
virustotal
zoomeye

2. sasa$ export TARGET="facebook.com"
3. cat sources.txt | while read source; do theHarvester -d "${TARGET}" -b $source -f "${source}_${TARGET}";done
4. When the process finishes, we can extract all the subdomains found and sort them via the following command:
cat *.json | jq -r '.hosts[]' 2>/dev/null | cut -d':' -f 1 | sort -u > "${TARGET}_theHarvester.txt"
5. cat facebook.com_*.txt | sort -u > facebook.com_subdomains_passive.txt
6. cat facebook.com_subdomains_passive.txt | wc -l


**Passive Infrastructure Identification**
https://sitereport.netcraft.com/
https://web.archive.org/

go install github.com/tomnomnom/waybackurls@latest
waybackurls -dates https://facebook.com > waybackurls.txt
cat waybackurls.txt

-----------------------------------------------------------Active Infrastructure Identification------------------------------
curl -I "http://domain.com" 
curl -I http://domain.com

whatweb -a3 https://www.facebook.com -v

wafw00f -v https://www.tesla.com

aquatone:
cat hosts.txt | aquatone -ports 80,443,3000,3001

****Active Subdomain Enumeration*****
https://hackertarget.com/zone-transfer/

-FQDN of the nameserver for the "inlanefreight.htb" domain
 nslookup -type=NS inlanefreight.htb 10.129.223.110

1. nslookup -type=NS zonetransfer.me
Response:
Non-authoritative answer:
zonetransfer.me	nameserver = nsztm2.digi.ninja.
zonetransfer.me	nameserver = nsztm1.digi.ninja.
2.nslookup -type=any -query=AXFR zonetransfer.me nsztm1.digi.ninja

-Check number of zones:
	nslookup -type=any inlanefreight.htb 10.129.128.199
	dig ANY inlanefreight.htb @10.129.128.199

-Content of the TXT record as the answer	
dig @10.129.128.199 NS txt internal.inlanefreight.htb

-What is the FQDN of the IP address 10.10.34.136 and 10.10.1.5?
dig @10.129.128.199 NS axfr internal.inlanefreight.htb

-Using dig on “us.inlanefreight.htb” with the “NS a” filter
dig @10.129.128.199 NS a us.inlanefreight.htb

-Submit the number of all “A” records from all zones as the answer
dig @10.129.88.248 AXFR inlanefreight.htb
dig @10.129.88.248 AXFR internal.inlanefreight.htb

nslookup -type=NS inlanefreight.htb 10.129.69.22
nslookup -type=any -query=AXFR inlanefreight.htb 10.129.69.22

CEWL
cewl -m5 --lowercase -w wordlist.txt http://192.168.10.10

ffuf -recursion -recursion-depth 1 -u http://192.168.10.10/FUZZ -w /opt/useful/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
------------------------------------------------------------------- FFUF ----------------------------------------------------------------------------------------------------------
sudo sh -c 'echo "SERVER_IP academy.com" >> /etc/hosts'

***Directory fuzzing:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/FUZZ
  -t 200 = faster
  -ic  = avoid clutter results

Extension fuzzing:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://SERVER_IP:PORT/blog/indexFUZZ
Page fuzzing:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/blog/FUZZ.php

Recursive scanning:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/FUZZ -recursion -recursion-depth 1 -e .php -v

Subdomain:
ffuf -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://FUZZ.inlanefreight.com/

VHost:
ffuf -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.com:PORT/ -H 'Host: FUZZ.academy.com' -fs 986,985
curl -s http://192.168.10.10 -H "Host: randomtarget.com"
manual ffuf where you need vhost domains in the file:
cat ./vhosts | while read vhost;do echo "\n********\nFUZZING: ${vhost}\n********";curl -s -I http://192.168.10.10 -H "HOST: ${vhost}.randomtarget.com" | grep "Content-Length: ";done

Filtering:
ffuf -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.com:PORT/ -H 'Host: FUZZ.academy.com' -fs 986

Parameter fuzzing - GET
ffuf -w /usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://admin.academy.com:PORT/admin/admin.php?FUZZ=key -fs 798

Parameter Fuzzing - POST
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://admin.academy.com:PORT/admin/admin.php -X POST -d 'FUZZ=key' -H 'Content-Type: application/x-www-form-urlencoded' -fs xxx

Value Fuzzing
for i in $(seq 1 1000); do echo $i >> ids.txt; done

cat ids.txt
1
2
3
4
5
ffuf -w ids.txt:FUZZ -u http://admin.academy.com:32654/admin/admin.php -X POST -d 'id=FUZZ' -H 'Content-Type: application/x-www-form-urlencoded' -fs 768
curl -d "id=**" -H 'Content-Type: application/x-www-form-urlencoded' -X POST http://admin.academy.com:32654/admin/admin.php ->  for flag
