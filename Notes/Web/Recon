dirsearch -u http://<domainame>

python3 -c 'import pty;pty.spawn("/bin/bash")'   --> interactive terminal

PASSIVE INFO GATHERING:
C:\> whois.exe facebook.com
whois www.example.com

whois x.x.x.x
------------------------------------------------DNS---------------------------------------------------------------------------------------------
Querying: A Records
nslookup example.com
dig facebook.com @1.1.1.1 (Server from previous query)

Querying: A Records for a Subdomain
nslookup -query=A example.com
dig a www.example.com @1.1.1.1

Querying: PTR Records for an IP Address
nslookup -query=PTR 31.13.92.36(facebook address)
dig -x 31.13.92.36 @1.1.1.1

 Querying: ANY Existing Records
 nslookup -query=ANY example.com
 dig any google.com @8.8.8.8
 dig any cloudflare.com @8.8.8.8

 Querying: TXT Records
 nslookup -query=TXT example.com
 dig txt facebook.com @1.1.1.1

 Querying: MX Records
 nslookup -query=MX example.com
 dig mx facebook.com @1.1.1.1

 1. Identifying Nameservers
 nslookup -type=NS zonetransfer.me
 2.Perform the Zone transfer using -type=any and -query=AXFR parameters
 nslookup -type=any -query=AXFR zonetransfer.me nsztm1.digi.ninja

----------------------Passive Subdomain Enumeration--------------------

 Certificates:
    https://censys.io
    https://crt.sh
 https://www.virustotal.com/gui/home/url

 Certificate Transparency:
 export TARGET="facebook.com"
 curl -s "https://crt.sh/?q=${TARGET}&output=json" | jq -r '.[] | "\(.name_value)\n\(.common_name)"' | sort -u > "${TARGET}_crt.sh.txt"
 description: jq -r '.[]' "\(.name_value)\n\(.common_name)"' 	Process the json output and print certificate's name value and common name one per line.
 head -n20 facebook.com_crt.sh.txt

 export TARGET="facebook.com"
 export PORT="443"
 openssl s_client -ign_eof 2>/dev/null <<<$'HEAD / HTTP/1.0\r\n\r' -connect "${TARGET}:${PORT}" | openssl x509 -noout -text -in - | grep 'DNS' | sed -e 's|DNS:|\n|g' -e 's|^\*.*||g' | tr -d ',' | sort -u

 **Automating Passive Subdomain Enumeration**
1. cat sources.txt
baidu
bufferoverun
crtsh
hackertarget
otx
projectdiscovery
rapiddns
sublist3r
threatcrowd
trello
urlscan
vhost
virustotal
zoomeye

2. sasa$ export TARGET="facebook.com"
3. cat sources.txt | while read source; do theHarvester -d "${TARGET}" -b $source -f "${source}_${TARGET}";done
4. When the process finishes, we can extract all the subdomains found and sort them via the following command:
cat *.json | jq -r '.hosts[]' 2>/dev/null | cut -d':' -f 1 | sort -u > "${TARGET}_theHarvester.txt"
5. cat facebook.com_*.txt | sort -u > facebook.com_subdomains_passive.txt
6. cat facebook.com_subdomains_passive.txt | wc -l


**Passive Infrastructure Identification**
https://sitereport.netcraft.com/
https://web.archive.org/

go install github.com/tomnomnom/waybackurls@latest
waybackurls -dates https://facebook.com > waybackurls.txt
cat waybackurls.txt

-------------------Active Infrastructure Identification---------------------
curl -I "http://domain.com" 
curl -I http://domain.com

whatweb -a3 https://www.facebook.com -v

wafw00f -v https://www.tesla.com

****Active Subdomain Enumeration*****
https://hackertarget.com/zone-transfer/

-FQDN of the nameserver for the "inlanefreight.htb" domain
 nslookup -type=NS inlanefreight.htb 10.129.223.110

1. nslookup -type=NS zonetransfer.me
Response:
Non-authoritative answer:
zonetransfer.me	nameserver = nsztm2.digi.ninja.
zonetransfer.me	nameserver = nsztm1.digi.ninja.
2.nslookup -type=any -query=AXFR zonetransfer.me nsztm1.digi.ninja

-Check number of zones:
	nslookup -type=any inlanefreight.htb 10.129.128.199
	dig ANY inlanefreight.htb @10.129.128.199

-Content of the TXT record as the answer	
dig @10.129.128.199 NS txt internal.inlanefreight.htb

-What is the FQDN of the IP address 10.10.34.136 and 10.10.1.5?
dig @10.129.128.199 NS axfr internal.inlanefreight.htb

-Using dig on “us.inlanefreight.htb” with the “NS a” filter
dig @10.129.128.199 NS a us.inlanefreight.htb

-Submit the number of all “A” records from all zones as the answer
dig @10.129.88.248 AXFR inlanefreight.htb
dig @10.129.88.248 AXFR internal.inlanefreight.htb

nslookup -type=NS inlanefreight.htb 10.129.69.22
nslookup -type=any -query=AXFR inlanefreight.htb 10.129.69.22

CEWL
cewl -m5 --lowercase -w wordlist.txt http://192.168.10.10
---------------------------------------- FFUF ----------------------------------------------------------------------------------------------------------
sudo sh -c 'echo "SERVER_IP academy.com" >> /etc/hosts'

Directory fuzzing:
 ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ
  ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/FUZZ
  -t 200 = faster
  -ic  = avoid clutter results

Extension fuzzing:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://SERVER_IP:PORT/blog/indexFUZZ
Page fuzzing:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/blog/FUZZ.php

Recursive scanning:
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://SERVER_IP:PORT/FUZZ -recursion -recursion-depth 1 -e .php -v

Subdomain:
ffuf -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://FUZZ.inlanefreight.com/

VHost:
ffuf -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.com:PORT/ -H 'Host: FUZZ.academy.com' -fs 986,985
curl -s http://192.168.10.10 -H "Host: randomtarget.com"
manual ffuf where you need vhost domains in the file:
cat ./vhosts | while read vhost;do echo "\n********\nFUZZING: ${vhost}\n********";curl -s -I http://192.168.10.10 -H "HOST: ${vhost}.randomtarget.com" | grep "Content-Length: ";done

Filtering:
ffuf -h
ffuf -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.com:PORT/ -H 'Host: FUZZ.academy.com' -fs 900
ffuf -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.com:PORT/ -H 'Host: FUZZ.academy.com' -fs 986

Parameter fuzzing - GET
ffuf -w /usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://admin.academy.com:PORT/admin/admin.php?FUZZ=key -fs 798

Parameter Fuzzing - POST
ffuf -w /opt/useful/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://admin.academy.com:PORT/admin/admin.php -X POST -d 'FUZZ=key' -H 'Content-Type: application/x-www-form-urlencoded' -fs xxx

Value Fuzzing
for i in $(seq 1 1000); do echo $i >> ids.txt; done

cat ids.txt
1
2
3
4
5
ffuf -w ids.txt:FUZZ -u http://admin.academy.com:32654/admin/admin.php -X POST -d 'id=FUZZ' -H 'Content-Type: application/x-www-form-urlencoded' -fs 768
curl -d "id=**" -H 'Content-Type: application/x-www-form-urlencoded' -X POST http://admin.academy.com:32654/admin/admin.php ->  for flag
----- FUFF Skill assessment---------------
Q. Run a sub-domain/vhost fuzzing scan on ‘*.academy.htb’ for the IP shown above. What are all the sub-domains you can identify?
ffuf -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://x.x.x.x:31001/ -H 'Host: FUZZ.academy.htb'
response 3 values
Add the subdomains to “/etc/hosts”

Q. Before you run your page fuzzing scan, you should first run an extension fuzzing scan. What are the different extensions accepted by the domains?
ffuf -w /usr/share/wordlists/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://***.academy.htb:31001/indexFUZZ
3 values
Q.  One of the pages you will identify should say ‘You don’t have access!’. What is the full page URL?
ffuf -w /usr/share/wordlists/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://***.academy.htb:31001/FUZZ  -recursion -recursion-depth 1 -e .php7 -v -fs 0
we are getting .php7 page
Q.  In the page from the previous question, you should be able to find multiple parameters that are accepted by the page. What are they?
sudo ffuf -w /usr/share/wordlists/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://***.academy.htb:31001/courses/***.php7?FUZZ=key -fs 774
two values
Q. Try fuzzing the parameters you identified for working values. One of them should return a flag. What is the content of the flag?
sudo ffuf -w /usr/share/wordlists/dirb/others/names.txt:FUZZ -u http://***.academy.htb:31001/courses/***.php7 -X POST -d 'username=FUZZ' -H 'Content-Type: application/x-www-form-urlencoded' -fs 781
one value
Send a POST request via curl with the above data to get the flag.
curl -d "username=***" -H 'Content-Type: application/x-www-form-urlencoded' -X POST http://***.academy.htb:31001/courses/***.php7
BINGO!!!
